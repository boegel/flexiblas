Linking FlexiBLAS statically or dynamically with other modules is making a
combined work based on FlexiBLAS. Thus, the terms and conditions of the GNU
General Public License cover the whole combination.

As a special exception, the copyright holders of FlexiBLAS give you permission
to combine FlexiBLAS program with free software programs or libraries that are
released under the GNU LGPL and with independent modules that communicate with
FlexiBLAS solely through the BLAS/LAPACK interface as provided by the
BLAS/LAPACK reference implementation. You may copy and distribute such a system
following the terms of the GNU GPL for FlexiBLAS and the licenses of the other
code concerned, provided that you include the source code of that other code
when and as the GNU GPL requires distribution of source code and provided that
you do not modify the BLAS/LAPACK interface.

Note that people who make modified versions of FlexiBLAS are not obligated to
grant this special exception for their modified versions; it is their choice
whether to do so. The GNU General Public License gives permission to release a
modified version without this exception; this exception also makes it possible
to release a modified version which carries forward this exception. If you
modify the BLAS/LAPACK interface, this exception does not apply to your
modified version of FlexiBLAS, and you must remove this exception when you
distribute your modified version.

This exception is an additional permission under section 7 of the GNU General
Public License, version 3 (“GPLv3”)

The reference BLAS/LAPACK interface contains all routines provided by the
reference LAPACK implementation from http://www.netlib.org/lapack in its most
recent version. Furthermore, the following functions provided by FlexiBLAS are
included in this defintion:
 - s/d/c/zomatcopy its cblas interface
 - s/d/c/zimatcopy its cblas interface
 - s/d/c/zaxpby its cblas interface
 - s/d/c/zgeadd its cblas interface
 - openblas_set_num_threads, mkl_set_num_threads, acmlsetnumthreads
 - openblas_get_num_threads, mkl_get_max_threads, acmlgetnumthreads

