3.0.0 (June, 2020)
------------------
- Remove useless NETLIB64 config option
- Update to LAPACK 3.9.0
- Update LAPACK 3.7.0 to 3.7.1 Due to the fact that the ABI is the same and
  LAPACK 3.7.1 is only a bugfix release the LAPACK API Version 3.7.0 and 3.7.1
  will give the same interface and the same fallback backend from LAPACK 3.7.1
- Fix #72 - Default BLAS can be set using FLEXIBLAS_DEFAULT_BLAS at compile time
- Fix #74 - FLEXIBLAS_CONFIG environment variable to supply a local config
- Internal PATH management redesigned, FLEXIBLAS_LIBRARY_PATH introduced.
- Support for per function hooks.
- CMake minimum version 3.0.0
- New property: nolapack, prevent FlexiBLAS from loading LAPACK from the
  backend. In this way the LAPACK implementation from FlexiBLAS will be used
  and a full profile can be generated.
- hooks handled via the flexiblas tool
- 32 and 64 bit integer version does not shared binaries or configuration
- A precompiled reference BLAS and LAPACK implementatiion can be used during
  compilation.
- libcscutils is now compiled and linked with -fvisibility=hidden to avoid
  linking libcscutils when linking with flexiblas
- OpenBLAS from Debian/Ubuntu/RHEL/Fedora is found properly in all versions.

2.0.0 (March, 2017)
-----------------
- Fixed: Bug/Crash if default backend does not exist
- New Benchmark Tool (AXPY,GEMM,GEMV unified, latency tests)
- Rewrite the FlexiBLAS tool to use a common management library.
- Include LAPACK Interface (Maximum API Level 3.7.0)
- Update CBLAS tests to current versions
- Many fixes and code rewrites

1.3.0 (November, 2015)
---------------------
- Add s/d/c/z geadd function from ATLAS/OpenBLAS
- Allow to overload BLAS functions using hooks.
- Runtime switching of BLAS libraries.
- Profiling information in now held in the structure of the correponding BLAS
  functions, but accumulated in the end.
- Configuration is done using libcscutils/ini, i.e., we have an ini-file like
  configuration system.
- flexiblas command line tool redesigned.
- BLAS routines can be replaced in the backends. See src/backends/demo/backend.c
  for details.
- The wrapper are generated via code generation software.
- Different integer sizes are supported. Each routine comes with a default
  integer variant (which is either 32 or 64 bit selected at compile time.) and
  additionally a 32 and 64 bit interface. (experimental, please do not use in
  production code)
- Code cleanup
- Octave Interface
- 32 and 64 bit version with separeted environment variables and configurations

1.2.0 (November, 2014)
-----------------------
- add s/d/c/z axpby as BLAS extension (Like in OpenBLAS or MKL)
- add s/d/c/z omatcopy as BLAS extension, following both APIs (OpenBLAS and MKL)
- add s/d/c/z imatcopy as BLAS extension, following both APIs (OpenBLAS and MKL)
- new configure option: -DDEV=ON/OFF  to enable development builds the run only
  in the build directory. Default is OFF.
- user supplied XERBLA functions now work with ACML and MKL
- add CBLAS tests
- working 8-byte integer support


1.1.1 (October, 2014)
-----------------
- fix DCABS1

1.1.0 (September, 2014)
-----------------------
- rewrite internal function for handling the shared objects.
- include first parts of the Win32 and Win64 compatability
- integrated the profiling in the normal library.
- Using -DABI=Intel the library is configured to provide an ifort
  compatible interface. The name of the library changes to libflexblas_intel.so


1.0.1 (April 30th, 2014)
------------------------
- Fixed SCABS1


1.0.0 ( January 2014 )
----------------------
 Initial Release
