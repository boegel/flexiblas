project (FlexiBLAS)
ENABLE_LANGUAGE (Fortran)
cmake_minimum_required(VERSION 2.6)
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${PROJECT_SOURCE_DIR}/CMakeModules)

OPTION(TESTS "Enable Tests" ON)
OPTION(CBLAS "Enable CBLAS Interface" ON ) 
OPTION(INTEGER8 "Use 8 Byte Integer" OFF) 
OPTION(EXTBLAS "Add BLAS extensions like AXPBY" ON) 
OPTION(BUILD_SHARED_LIBS "Enable Shared Library" ON) 
OPTION(DEV "Development Build" OFF) 

#SET(BUILD_SHARED_LIBS ON)
SET(LIBS m) 

# Paths 
INCLUDE(GNUInstallDirs)
IF(DEFINED SYSCONFDIR)
 SET(CMAKE_INSTALL_FULL_SYSCONFDIR ${SYSCONFDIR})
ENDIF()
MESSAGE(STATUS "SYSCONFDIR: ${CMAKE_INSTALL_FULL_SYSCONFDIR}")
MESSAGE(STATUS "LIBDIR:     ${CMAKE_INSTALL_FULL_LIBDIR}")
MESSAGE(STATUS "BINDIR:     ${CMAKE_INSTALL_FULL_BINDIR}")
MESSAGE(STATUS "INCLUDEIR:  ${CMAKE_INSTALL_FULL_INCLUDEDIR}")

#
# build type
# 
IF( NOT CMAKE_BUILD_TYPE )
	SET( CMAKE_BUILD_TYPE "Release" )
ENDIF( NOT CMAKE_BUILD_TYPE )

IF ( CMAKE_BUILD_TYPE STREQUAL "Debug" )
	#	SET (CMAKE_C_FLAGS_DEBUG ${CMAKE_C_FLAGS_DEBUG} -pg)
	SET ( DEBUG "ON" )
ENDIF ( CMAKE_BUILD_TYPE STREQUAL "Debug" )

IF ( ${CMAKE_C_COMPILER_ID} STREQUAL "GNU")
	SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -fPIC")
	SET( CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -Wall -fPIC")
ENDIF()

IF (DEBUG STREQUAL ON) 
	SET( CMAKE_BUILD_TYPE "Debug" )
	SET ( DEBUG TRUE)
ENDIF (DEBUG STREQUAL ON )

IF ( INTEGER8 STREQUAL ON ) 
	IF ( ${CMAKE_C_COMPILER_ID} STREQUAL "GNU") 
		MESSAGE(STATUS "Setting GNU Compiler Flags")
		SET(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -fdefault-integer-8 -frecursive")
	ELSEIF (${CMAKE_C_COMPILER_ID} STREQUAL "Intel" ) 
		SET ( CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -i8 -recursive") 
	ENDIF()
	ADD_DEFINITIONS(-DINTEGER8)
	SET(FLEXIBLAS_INTEGER8 TRUE)
ELSE()
	SET(FLEXIBLAS_INTEGER8 FALSE)
ENDIF (INTEGER8 STREQUAL ON) 

IF (CBLAS STREQUAL ON) 
	ADD_DEFINITIONS(-DFLEXIBLAS_CBLAS)
ENDIF()


IF (DEV STREQUAL ON) 
	SET ( FLEXIBLAS_DEFAULT_LIB_PATH "${CMAKE_BINARY_DIR}/netlib:${CMAKE_BINARY_DIR}/src:${CMAKE_INSTALL_FULL_LIBDIR}/flexiblas/:")
	SET ( CMAKE_INSTALL_FULL_SYSCONFDIR "${CMAKE_BINARY_DIR}")
	MESSAGE (WARNING "-------------------------------------------------------------------------------------------")
	MESSAGE (WARNING "- This is an development build and can not be install. Please set add -DDEV=OFF to cmake. -")
	MESSAGE (WARNING "-------------------------------------------------------------------------------------------")
ELSE()
	SET ( FLEXIBLAS_DEFAULT_LIB_PATH "${CMAKE_INSTALL_FULL_LIBDIR}/flexiblas/")
ENDIF() 


IF (NOT DEFINED ABI) 
	IF ( ${CMAKE_Fortran_COMPILER_ID} STREQUAL "Intel")
		SET(ABI "Intel" CACHE STRING "ABI of the Fortran Interface")
		
	ELSE()
		SET(USE_INTERFACE_INTEL FALSE) 
		SET(ABI "GNU" CACHE STRING "ABI of the Fortran Interface")
	ENDIF()
ELSE()
	IF (NOT ( ABI STREQUAL "GNU" OR ABI STREQUAL "Intel"))
		MESSAGE(FATAL_ERROR "ABI must be GNU or Intel")
	ENDIF()
ENDIF()
IF ( ABI STREQUAL "Intel") 
	SET(USE_INTERFACE_INTEL TRUE) 
ELSE ()
	SET(USE_INTERFACE_INTEL FALSE) 
ENDIF()
#IF (NOT SYSCONFDIR) 
#	SET(CMAKE_INSTALL_FULL_SYSCONFDIR "${CMAKE_INSTALL_PREFIX}/etc/")
#ENDIF()
IF (DEFINED FALLBACK) 
	SET (FALLBACK_NAME "${FALLBACK}")
ELSE()
	SET (FALLBACK_NAME FALSE) 
ENDIF()

SET ( INCLUDE_DIR ${INCLUDE_DIR} ${CMAKE_BINARY_DIR}/include ${CMAKE_SOURCE_DIR}/include ${CMAKE_BINARY_DIR} )
CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/config.h.in ${CMAKE_BINARY_DIR}/include/flexiblas_config.h)
LIST(REMOVE_DUPLICATES INCLUDE_DIR)
IF (APPLE) 
	SET ( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -D_FILE_OFFSET_BITS=64 -fPIC") 
ELSE() 
	IF (WIN32) 
		SET ( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -D_FILE_OFFSET_BITS=64 -Wall")
	ELSE ()
		SET ( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -D_FILE_OFFSET_BITS=64 -rdynamic -Wall -fPIC ")
	ENDIF()
ENDIF()
SET ( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D_FILE_OFFSET_BITS=64 -fPIC") 

SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)


#
# Check Some files 
#
INCLUDE (CheckIncludeFiles)
IF (WIN32) 
	MESSAGE(STATUS "Building Windows Version" ) 
	IF (MINGW) 
		MESSAGE(STATUS "Using MingW Compiler")
	ENDIF() 
ELSE() 
	# CHECK_INCLUDE_FILES (stdatomic.h HAVE_STDATOMIC_H)
	CHECK_INCLUDE_FILES (dlfcn.h	 HAVE_DLFCN_H)

	INCLUDE (CheckSymbolExists) 
	CHECK_SYMBOL_EXISTS(RTLD_GLOBAL   "dlfcn.h" HAVE_RTLD_GLOBAL)
	CHECK_SYMBOL_EXISTS(RTLD_DEEPBIND "dlfcn.h" HAVE_RTLD_DEEPBIND)
	CHECK_SYMBOL_EXISTS(RTLD_NOW	  "dlfcn.h" HAVE_RTLD_NOW)

	INCLUDE (CheckFunctionExists) 
	CHECK_FUNCTION_EXISTS(dlopen DLOPEN_C) 
	SET(__CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES})
	SET(CMAKE_REQUIRED_LIBRARIES dl)
	CHECK_FUNCTION_EXISTS(dlopen DLOPEN_DL)
	SET(CMAKE_REQUIRED_LIBRARIES ${__CMAKE_REQUIRED_LIBRARIES})

	IF (DLOPEN_DL) 
	 SET(LIBS ${LIBS} dl)
	ENDIF()
	IF (NOT ( DLOPEN_DL OR DLOPEN_C ) ) 
	 MESSAGE(ERROR "No dlopen function found")
	ENDIF()

	IF ( NOT HAVE_DLFCN_H ) 
		MESSAGE(FATAL_ERROR "dlfcn.h not found, aborting")
	ENDIF()
ENDIF()

SET(EXTRA_BLAS "")
add_subdirectory(netlib)
add_subdirectory(src)
add_subdirectory(examples)

INSTALL(FILES	${CMAKE_SOURCE_DIR}/include/f77blas_interface.h DESTINATION ${CMAKE_INSTALL_FULL_INCLUDEDIR}/flexiblas/)
IF(CBLAS STREQUAL ON) 
	INSTALL(FILES	${CMAKE_SOURCE_DIR}/include/cblas.h DESTINATION ${CMAKE_INSTALL_FULL_INCLUDEDIR}/flexiblas/)
ENDIF()


CONFIGURE_FILE(
  "${CMAKE_CURRENT_SOURCE_DIR}/cmake_uninstall.cmake.in"
  "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake"
  IMMEDIATE @ONLY)
ADD_CUSTOM_TARGET(uninstall "${CMAKE_COMMAND}" -P "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake") 

set(prefix ${CMAKE_INSTALL_PREFIX})
set(libdir ${CMAKE_INSTALL_FULL_LIBDIR})
set(PKG_CONFIG_DIR ${CMAKE_INSTALL_FULL_LIBDIR}/pkgconfig)

set(includedir ${CMAKE_INSTALL_PREFIX}/include/flexiblas/)
set(flexiblasname flexiblas)
CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/flexiblas.pc.in ${CMAKE_CURRENT_BINARY_DIR}/flexiblas.pc)

install(FILES
	  ${CMAKE_CURRENT_BINARY_DIR}/flexiblas.pc
	  DESTINATION ${PKG_CONFIG_DIR}
)
   
IF ( TESTS ) 
	MESSAGE( STATUS "Enable Testing...")
	ENABLE_TESTING()
	add_subdirectory(test)
ENDIF (TESTS)

#
# Final Status
#
MESSAGE(STATUS "------------------------------------------------")
MESSAGE(STATUS "      Final Configuration Status ")
MESSAGE(STATUS "------------------------------------------------")
MESSAGE(STATUS "Build 8 byte integer: ${INTEGER8}")
MESSAGE(STATUS "Build CBLAS interface: ${CBLAS}")
MESSAGE(STATUS "Install path: ${CMAKE_INSTALL_PREFIX}")
MESSAGE(STATUS "Extra BLAS search path: ${HBLAS_DEFAULT_LIB_PATH}")
MESSAGE(STATUS "ABI: ${ABI}")
MESSAGE(STATUS "Interface to Extra BLAS Libraries:")
FOREACH(EBLAS ${EXTRA_BLAS})
MESSAGE(STATUS " - ${EBLAS}")
ENDFOREACH()
MESSAGE(STATUS "------------------------------------------------")


