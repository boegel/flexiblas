FlexiBLAS  - Version 1.0.0
--------------------------

Copyright 2013, 2014 by 
  - Martin KÃ¶hler, MPI Magdeburg
  - Jens Saak, MPI Magdeburg 

FlexiBLAS is a BLAS wrapper library that enables the exchange of the
BLAS implementation used by a program without recompiling or relinking
it.  This could in principle also be achieved using the
LD_LIBRARY_PATH mechanism if all BLASS implementations consitently
implemented a single library file that implements a 100% compatible
interface. Unfortunately not all BLAS implementations consists of only
this exact one shared library containing all required symbols. The requirement
for different numbers of library (shared object) files clearly breaks
the possibility to easily switch via the LD_LIBRARY_PATH mechanism.

The FlexiBLAS library provides a GNU Fortran compatible interface to the 
application of all functions and subroutines provided by the 
Netlib reference implementation. As backends FlexiBLAS can employ all BLAS
implementations which consist of one shared library directly. Other 
variants like the Intel MKL or ATLAS that use multiple files are 
integrated using a single surrogate library wrapping the different files 
into one. 

Setup
----- 
The build system used by FlexiBLAS is cmake which prefers an out of source 
build:
 
 cd build
 cmake ../ 
 make 
 make install

If the build system should try to build backends for BLAS libraries
that are not known to the FindBLAS mechanism, or reside in non
standard paths in your system, make sure to include their location
(containing directory) to the LD_LIBRARY_PATH environment variable. At
the end of the configuration step cmake will inform you about the
additional backends it found on your system.

The configuration via cmake can be influenced further by the following options:
- CMAKE_INSTALL_PREFIX=/PATH/  
  Defines an alternative location for the installation of the resulting 
  library. The default installation location is /usr/local. 
  The library called libflexiblas.so is installed in 
  CMAKE_INSTALL_PREFIX/lib and the default search path for backends is 
  CMAKE_INSTALL_PREFIX/lib/flexiblas.
- DEBUG=ON/OFF 
  Turns the inclusion of debugging symbols on or off. The default is off. 
- INTEGER8=ON/OFF 
  Enables 8-byte integers for the Fortran interface. Be aware that the 
  application and the backend libraries must be compiled to support 8 
  byte integers as well. Since most applications and libraries still us the 
  classic 32bit integers the default is OFF.
- PROFILE=ON/OFF 
  Enables the profiling capabilities of FlexiBLAS. This does not refer to  
  profiling in the sense of gprof. Instead the number of BLAS function calls 
  are counted and their execution time is measured by FlexiBLAS internally. 
  If the program terminates FlexiBLAS shows how often each BLAS routine was 
  called and how much time was spent in it. If the option is turned on
  the name of the shared library changes to libflexiblas-profile.so.
  This option is set to OFF by default.
- CBLAS=ON/OFF 
  Enables the CBLAS frontend. If the backend itself contains a CBLAS interface 
  that one is used. Otherwise FlexiBLAS acts like the CBLAS-wrapper from 
  Netlib. 
  This option is set to ON by default.
- D`BLASNAME`=LIBS
  Override the automatic search for a BLAS backend. The `BLASNAME` is the name 
  of the backend in upper case. The libs argument is a semicolon separated list
  of libraries which are necessary to link against this BLAS library. 
  Example if we want to compile the OpenBLAS backend out of a static OpenBLAS
  library we use 
   -DOPENBLAS="/path/to/libopenblas.a;gfortran;gomp;m"
  Using this configuration variable the detection of a special BLAS library can
  be turned off via setting it to "OFF". 


Configuration Files 
-------------------

FlexiBLAS reads a set of configuration files at startup. These are 
 CMAKE_INSTALL_PREFIX/etc/flexiblasrc 
and 
 ~/.flexiblasrc

The files contain a mapping between the name of a backend and the corresponding
name of the shared object. The setting in the user owned file overrides the 
global settings. The syntax of the file is: Each line contains one mapping of
the following structure: 

	Name_Of_The_Backend | shared_object.so 

If the name of the shared object is a relative path then FlexiBLAS searches
inside its default path (CMAKE_INSTALL_PREFIX/lib/flexiblas) for this shared 
object. If the path is absolute it tries to open the library directly. The name 
of the backend is case-insensitive. 

Additionally a special mapping exists to set the default mapping. The line have
to look like
	
	default | Name_Of_The_Default_Backend

This mapping sets the default backend to use. If it is not present in one of 
the configuration files FlexiBLAS will use the standard Netlib implementation. 

The user config files can be handle using the "flexiblas" tool. By calling 
 
 $ flexiblas list 

the user can list all available backends from the configuration files. The
default backend can be set via 

 $ flexiblas set Name_Of_The_Backend. 


Selecting the backend at runtime
--------------------------------
The behavior of the FlexiBLAS library is controlled by a set of environment 
variables described below and the above mentioned configuration files.
The most important environment variable is called FLEXIBLAS. This variable
describes the shared  object library file where the backend BLAS implementation
is contained. The  variable supports three types of descriptions. If the value
does not contain a "/" FlexiBLAS searches for the given name in
CMAKE_INSTALL_PREFIX/lib/flexiblas. That means the value is interpreted as a
name of one of the wrapper libraries.  If it can not find it there it searches
the configuration files for a line  matching the value and fetches the actual 
name of the shared object library from there. Otherwise the value is 
interpreted as a full path description of the BLAS backend library shared 
object file to use. If the variable is not set the Netlib reference BLAS, or 
the default from the configuration files is used. See the documentation for 
details on the names, syntax and locations of the configuration files. 

Usage example
-------------
If FlexiBLAS built an interface to the ATLAS library then 
one can use the following in an application to call the ATLAS instead of the 
default BLAS: 
 
 $ FLEXIBLAS="libblas_atlas.so" ./yourapp

In the case FlexiBLAS should use OpenBLAS and OpenBLAS is contained in one 
of the configuration files the application can be stated like:
 $ FLEXIBLAS=OpenBLAS ./yourapp 


Linking a program against FlexiBLAS
-----------------------------------
By default FlexiBLAS produces a library called libflexiblas.so which one can 
link against a program just like the refernence BLAS implementation. Other 
libraries are not necessary. 

Environment variable
--------------------
- FLEXIBLAS=PATH/TO/BLAS
  This is the main variable used by FlexiBLAS. It selects the BLAS library 
  which is used as backend this should be a shared object which contains or 
  allows to resolve all symbols defined in the Netlib reference BLAS library. 
  The default search path is CMAKE_INSTALL_PREFIX/lib/flexiblas 
  or CMAKE_INSTALL_PREFIX/lib/flexiblas-profile. Alternatively an absolute path 
  to a shared object can be given. If the variable is not set it uses 
  "libblas_netlib.so" as default, or any other backend that is specified as 
  default in the configuration files. 
  For example if OpenBLAS and ATLAS are available the following two additional 
  implementations can be used:
   * libblas_openblas.so  - to select OpenBLAS
   * libblas_atlas.so     - to select ATLAS
  FlexiBLAS installs a command "flexiblas" that can be used to find list all 
  available backends (flexiblas list) and prescribe the users default 
  (flexiblas set NAME_OF_BACKEND) 
- FLEXIBLAS_VERBOSE=0/1
  Enables some additional output at the startup of FlexiBLAS. This can be 
  useful if a backend is not loaded correctly, or when logfiles should contain 
  the actual BLAS backend used in a certain run of the user application, e.g., 
  because several implementations are compared for benchmarking purposes. 
  If the variable is not set it is assumed to be 0 and the additional output 
  is turned off.
- FLEXIBLAS_NOPROFILE=0/1
  Turns off the final profiling summary if FlexiBLAS was compiled with 
  profiling support.  
- FLEXIBLAS_PROFILE_FILE=FILENAME
  Set a filename where to write the profiling output. If the variable is set the
  profiling output will be redirected to the file. Otherwise it is written to
  the standard error output "stderr" which is the default setting if the
  variable is not set. 

Profiling 
--------- 
If the library is compiled with enabled profiling support, the name of the
library changes from libflexiblas.so to libflexiblas-profile.so. The same
renaming is done for the configuration files and the flexiblas tool. 

License
-------
The whole library is provided under the conditions of the GPLv3 or higher. 
Except of the testing code ( contained in test/ ) and the Netlib BLAS 
implementation (contained in netlib/). These two parts are covered by the 
license of LAPACK (http://wwww.netlib.org/lapack). See COPYING.NETLIB 
for more details about this license. 

